

spring.application.name=Funding_Novel2

# WebApplication Type Setting : 스프링 MVC 기반으로 웹 애플리케이션 구동 
spring.main.web-application-type=servlet

# 톰캣 서버 포트 변경
server.port=8080

# Spring Boot의 Devtools애는 classpath 에 속해 있는 파일들의 수정을 감시하고
# 자동으로 재시작 해주는 기능이 포함되어 있음
spring.devtools.livereload.enabled=true

# DataSource setting
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=dbtest
spring.datasource.password=a1234



# JPA setting
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.properties.hibernate.format_sql=true

# Logging setting
logging.level.org.hibernate=info

# ViewResolver Setting
#spring.mvc.view.prefix=/WEB-INF/board/
#spring.mvc.view.suffix=.jsp

# Thymeleaf 
# - 개발 중 서버를 재시작하지 않아도 변경 사항을 즉시 확인할 수 있습니다.
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.web.resources.add-mappings=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# 소설 이미지 업로드 디렉토리
file.upload-dir=c:/uploads/
# 펀딩 이미지 업로드 디렉토리
file.funding-upload-dir=c:/upload/
spring.web.resources.static-locations=file:uploads/,classpath:/static/

# PortOne API 설정
iamport.key=7066613284703264
iamport.secret=F2SSGDxO48QTevkoegXWXNOCBYeBOfvWQQlm66KP1xUwGvR2Xf4zMShVxlRBvT0B3vMuasGsRNyHDvKX

# 로깅 설정
#logging.level.org.springframework=DEBUG
#logging.level.com.example=INFO


# Naver OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=FccDGrTPpYU2As9Cw45J
spring.security.oauth2.client.registration.naver.client-secret=YAIcpzuPFw
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver

# Naver OAuth2 Provider 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


# Kakao OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=88065ae3a2ea7b9ce9bf7a4c06eb3412
spring.security.oauth2.client.registration.kakao.client-secret=ImVDdoUpY9XguyOzksHuWOcpktJyblyW
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# Kakao OAuth2 Provider 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# 표지 파일 업로드
# spring.servlet.multipart.enabled: 파일 업로드 기능 여부를 선택
spring.servlet.multipart.enabled=true
# spring.servlet.multipart.location: 업로드된 임시 파일의 임시 저장 경로
# window와 mac의 경우에는 경로 설정이 다름. 윈도우의 경우에는 주소처럼 처리하면 된다.
spring.servlet.multipart.location=C:/LIMYUNJI/image
# spring.servlet.multipart.max-request-size: 한번에 최대 업로드 가능 용량
spring.servlet.multipart.max-request-size=30MB
# spirng.servlet.multipart.max-file-size: ㅠ파일 하나의 최대크기
spring.servlet.multipart.max-file-size=10MB
